{"ast":null,"code":"var _jsxFileName = \"D:\\\\PersonalProjects\\\\React_CV\\\\client\\\\src\\\\components\\\\CVInfo\\\\Certificate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getCertificate } from '../../actions/certificate';\nimport certificate from '../../reducers/certificate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Certificate = ({\n  getCertificate,\n  certificate,\n  loading,\n  error\n}) => {\n  _s();\n\n  const [certBool, setCertBool] = useState(false);\n  useEffect(() => {\n    if (certBoll === false) {\n      getCertificate();\n      setCertBool(true);\n    } else {\n      setTimeout(() => {\n        getCertificate();\n      }, 5000);\n    }\n  }, [certificate]);\n  let certificates = \"\";\n\n  if (loading === false && certificate !== {}) {\n    certificates = certificate.data.map((cert, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"certificat\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", cert.certificate_title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 22\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cv-section\",\n    id: \"certificat-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Trainings & Certificates \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"certificat-section\",\n      children: [\" \", certificates, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 46\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 14\n  }, this);\n};\n\n_s(Certificate, \"izOvQB71K0xoola6sSYb8d8rSuM=\");\n\n_c = Certificate;\nCertificate.propTypes = {\n  getCertificate: PropTypes.func.isRequired,\n  certificate: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  certificate: state.certificate.certificate,\n  loading: state.certificate.loading,\n  error: state.certificate.error\n});\n\nexport default connect(mapStateToProps, {\n  getCertificate\n})(Certificate);\n\nvar _c;\n\n$RefreshReg$(_c, \"Certificate\");","map":{"version":3,"sources":["D:/PersonalProjects/React_CV/client/src/components/CVInfo/Certificate.js"],"names":["React","useEffect","connect","PropTypes","getCertificate","certificate","Certificate","loading","error","certBool","setCertBool","useState","certBoll","setTimeout","certificates","data","map","cert","index","certificate_title","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEF,EAAAA,cAAF;AAAkBC,EAAAA,WAAlB;AAA+BE,EAAAA,OAA/B;AAAwCC,EAAAA;AAAxC,CAAD,KAAqD;AAAA;;AACrE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,KAAD,CAAxC;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,QAAQ,KAAK,KAAjB,EAAwB;AACpBR,MAAAA,cAAc;AACdM,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAHD,MAGO;AACHG,MAAAA,UAAU,CAAC,MAAM;AACbT,QAAAA,cAAc;AACjB,OAFS,EAEP,IAFO,CAAV;AAGH;AAEJ,GAVQ,EAUN,CAACC,WAAD,CAVM,CAAT;AAYA,MAAIS,YAAY,GAAG,EAAnB;;AACA,MAAIP,OAAO,KAAK,KAAZ,IAAqBF,WAAW,KAAK,EAAzC,EAA6C;AACzCS,IAAAA,YAAY,GAAGT,WAAW,CAACU,IAAZ,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjD,0BAAS;AAEL,QAAA,SAAS,EAAG,YAFP;AAAA,gCAGL;AAAA,0BACOD,IAAI,CAACE,iBADZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHK;AAAA,SACOD,KADP;AAAA;AAAA;AAAA;AAAA,cAAT;AAOH,KARc,CAAf;AASH;;AACD,sBAAS;AACD,IAAA,SAAS,EAAG,YADX;AAEL,IAAA,EAAE,EAAG,iBAFA;AAAA,4BAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHK,oBAIgC;AACjC,MAAA,EAAE,EAAG,oBAD4B;AAAA,sBACHJ,YADG;AAAA;AAAA;AAAA;AAAA;AAAA,YAJhC;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AASH,CAnCD;;GAAMR,W;;KAAAA,W;AAqCNA,WAAW,CAACc,SAAZ,GAAwB;AACpBhB,EAAAA,cAAc,EAAED,SAAS,CAACkB,IAAV,CAAeC,UADX;AAEpBjB,EAAAA,WAAW,EAAEF,SAAS,CAACoB,MAAV,CAAiBD;AAFV,CAAxB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BpB,EAAAA,WAAW,EAAEoB,KAAK,CAACpB,WAAN,CAAkBA,WADD;AAE9BE,EAAAA,OAAO,EAAEkB,KAAK,CAACpB,WAAN,CAAkBE,OAFG;AAG9BC,EAAAA,KAAK,EAAEiB,KAAK,CAACpB,WAAN,CAAkBG;AAHK,CAAL,CAA7B;;AAMA,eAAeN,OAAO,CAACsB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAA6CE,WAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { getCertificate } from '../../actions/certificate'\r\nimport certificate from '../../reducers/certificate'\r\nconst Certificate = ({ getCertificate, certificate, loading, error }) => {\r\n    const [certBool, setCertBool] = useState(false)\r\n    useEffect(() => {\r\n        if (certBoll === false) {\r\n            getCertificate()\r\n            setCertBool(true)\r\n        } else {\r\n            setTimeout(() => {\r\n                getCertificate()\r\n            }, 5000)\r\n        }\r\n\r\n    }, [certificate])\r\n\r\n    let certificates = \"\"\r\n    if (loading === false && certificate !== {}) {\r\n        certificates = certificate.data.map((cert, index) => {\r\n            return ( <\r\n                div key = { index }\r\n                className = \"certificat\" >\r\n                <\r\n                h3 > { cert.certificate_title } < /h3> <\r\n                /div>\r\n            )\r\n        })\r\n    }\r\n    return ( <\r\n        div className = \"cv-section\"\r\n        id = \"certificat-info\" >\r\n        <\r\n        h3 > Trainings & Certificates < /h3> <\r\n        div id = \"certificat-section\" > { certificates } <\r\n        /div> <\r\n        /div>\r\n    )\r\n}\r\n\r\nCertificate.propTypes = {\r\n    getCertificate: PropTypes.func.isRequired,\r\n    certificate: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    certificate: state.certificate.certificate,\r\n    loading: state.certificate.loading,\r\n    error: state.certificate.error\r\n})\r\n\r\nexport default connect(mapStateToProps, { getCertificate })(Certificate)"]},"metadata":{},"sourceType":"module"}