{"ast":null,"code":"var _jsxFileName = \"D:\\\\PersonalProjects\\\\React_CV\\\\client\\\\src\\\\components\\\\CVInfo\\\\Experience.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getExperience } from '../../actions/experience';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Experience = ({\n  getExperience,\n  experience,\n  loading,\n  error\n}) => {\n  _s();\n\n  const [exp_bool, setExpBool] = useState(false);\n  useEffect(() => {\n    if (exp_bool === false) {\n      getExperience();\n      setExpBool(true);\n    } else {\n      setTimeout(() => {\n        getExperience();\n      }, 5000);\n    }\n  }, [experience]);\n  let experiences = \"\";\n\n  if (!loading && experience != {}) {\n    experiences = experience.data.map((ex, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"experience\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", ex.experience_title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"workplace\",\n        children: [\" \", ex.experience_role, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 49\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"exp-date\",\n        children: [\" \", ex.start_period, \" - \", ex.end_period, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 63\n      }, this), \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 60\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cv-section\",\n    id: \"experience-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Experiences \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"exp-section\",\n      children: [\" \", experiences, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 14\n  }, this);\n};\n\n_s(Experience, \"L5Yf81nI5q/MLZi15gJuVXB3+s0=\");\n\n_c = Experience;\nExperience.propTypes = {\n  getExperience: PropTypes.func.isRequired,\n  experience: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  experience: state.experience.experience,\n  loading: state.experience.loading,\n  error: state.experience.error\n});\n\nexport default connect(mapStateToProps, {\n  getExperience\n})(Experience);\n\nvar _c;\n\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"sources":["D:/PersonalProjects/React_CV/client/src/components/CVInfo/Experience.js"],"names":["React","useEffect","useState","connect","PropTypes","getExperience","Experience","experience","loading","error","exp_bool","setExpBool","setTimeout","experiences","data","map","ex","index","experience_title","experience_role","start_period","end_period","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAED,EAAAA,aAAF;AAAiBE,EAAAA,UAAjB;AAA6BC,EAAAA,OAA7B;AAAsCC,EAAAA;AAAtC,CAAD,KAAmD;AAAA;;AAClE,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBT,QAAQ,CAAC,KAAD,CAAvC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,QAAQ,KAAK,KAAjB,EAAwB;AACpBL,MAAAA,aAAa;AACbM,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAHD,MAGO;AACHC,MAAAA,UAAU,CAAC,MAAM;AACbP,QAAAA,aAAa;AAChB,OAFS,EAEP,IAFO,CAAV;AAGH;AACJ,GATQ,EASN,CAACE,UAAD,CATM,CAAT;AAUA,MAAIM,WAAW,GAAG,EAAlB;;AACA,MAAI,CAACL,OAAD,IAAYD,UAAU,IAAI,EAA9B,EAAkC;AAC9BM,IAAAA,WAAW,GAAGN,UAAU,CAACO,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,EAAD,EAAKC,KAAL,kBAAiB;AAE/C,MAAA,SAAS,EAAG,YAFmC;AAAA,8BAG/C;AAAA,wBACOD,EAAE,CAACE,gBADV;AAAA;AAAA;AAAA;AAAA;AAAA,cAH+C,oBAIX;AAClC,QAAA,EAAE,EAAG,WAD6B;AAAA,wBACbF,EAAE,CAACG,eADU;AAAA;AAAA;AAAA;AAAA;AAAA,cAJW,oBAKG;AAChD,QAAA,EAAE,EAAG,UAD2C;AAAA,wBAC5BH,EAAE,CAACI,YADyB,SACNJ,EAAE,CAACK,UADG;AAAA;AAAA;AAAA;AAAA;AAAA,cALH;AAAA,OACnCJ,KADmC;AAAA;AAAA;AAAA;AAAA,YAArC,CAAd;AASH;;AAED,sBAAS;AACD,IAAA,SAAS,EAAG,YADX;AAEL,IAAA,EAAE,EAAG,iBAFA;AAAA,4BAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHK,oBAImB;AACpB,MAAA,EAAE,EAAG,aADe;AAAA,sBACGJ,WADH;AAAA;AAAA;AAAA;AAAA;AAAA,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AASH,CAlCD;;GAAMP,U;;KAAAA,U;AAmCNA,UAAU,CAACgB,SAAX,GAAuB;AACnBjB,EAAAA,aAAa,EAAED,SAAS,CAACmB,IAAV,CAAeC,UADX;AAEnBjB,EAAAA,UAAU,EAAEH,SAAS,CAACqB,MAAV,CAAiBD;AAFV,CAAvB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BpB,EAAAA,UAAU,EAAEoB,KAAK,CAACpB,UAAN,CAAiBA,UADC;AAE9BC,EAAAA,OAAO,EAAEmB,KAAK,CAACpB,UAAN,CAAiBC,OAFI;AAG9BC,EAAAA,KAAK,EAAEkB,KAAK,CAACpB,UAAN,CAAiBE;AAHM,CAAL,CAA7B;;AAKA,eAAeN,OAAO,CAACuB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,UAA5C,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { getExperience } from '../../actions/experience'\r\n\r\nconst Experience = ({ getExperience, experience, loading, error }) => {\r\n    const [exp_bool, setExpBool] = useState(false)\r\n    useEffect(() => {\r\n        if (exp_bool === false) {\r\n            getExperience()\r\n            setExpBool(true)\r\n        } else {\r\n            setTimeout(() => {\r\n                getExperience()\r\n            }, 5000)\r\n        }\r\n    }, [experience])\r\n    let experiences = \"\"\r\n    if (!loading && experience != {}) {\r\n        experiences = experience.data.map((ex, index) => ( <\r\n            div key = { index }\r\n            className = \"experience\" >\r\n            <\r\n            h3 > { ex.experience_title } < /h3> <\r\n            p id = \"workplace\" > { ex.experience_role } < /p> <\r\n            p id = \"exp-date\" > { ex.start_period } - { ex.end_period } < /p> <\r\n            /div>\r\n        ))\r\n    }\r\n\r\n    return ( <\r\n        div className = \"cv-section\"\r\n        id = \"experience-info\" >\r\n        <\r\n        h3 > Experiences < /h3> <\r\n        div id = \"exp-section\" > { experiences } <\r\n        /div> <\r\n        /div>\r\n    )\r\n}\r\nExperience.propTypes = {\r\n    getExperience: PropTypes.func.isRequired,\r\n    experience: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    experience: state.experience.experience,\r\n    loading: state.experience.loading,\r\n    error: state.experience.error\r\n})\r\nexport default connect(mapStateToProps, { getExperience })(Experience)"]},"metadata":{},"sourceType":"module"}