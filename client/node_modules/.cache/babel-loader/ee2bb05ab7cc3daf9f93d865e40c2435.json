{"ast":null,"code":"var _jsxFileName = \"D:\\\\PersonalProjects\\\\React_CV\\\\client\\\\src\\\\components\\\\CVInfo\\\\Experience.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getExperience } from '../../actions/experience';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Experience = ({\n  getExperience,\n  experience,\n  loading,\n  error\n}) => {\n  _s();\n\n  useEffect(() => {\n    getExperience();\n  }, []);\n  let experiences = \"\";\n\n  if (!loading && experience != {}) {\n    experiences = experience.data.map((ex, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"experience\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: ex.experience_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"workplace\",\n        children: ex.experience_role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"exp-date\",\n        children: [ex.start_period, \" - \", ex.end_period]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cv-section\",\n    id: \"experience-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Experiences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"exp-section\",\n      children: experiences\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Experience, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Experience;\nExperience.propTypes = {\n  getExperience: PropTypes.func.isRequired,\n  experience: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  experience: state.experience.experience,\n  loading: state.experience.loading,\n  error: state.experience.error\n});\n\nexport default connect(mapStateToProps, {\n  getExperience\n})(Experience);\n\nvar _c;\n\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"sources":["D:/PersonalProjects/React_CV/client/src/components/CVInfo/Experience.js"],"names":["React","useEffect","connect","PropTypes","getExperience","Experience","experience","loading","error","experiences","data","map","ex","index","experience_title","experience_role","start_period","end_period","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,aAAR,QAA4B,0BAA5B;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACD,EAAAA,aAAD;AAAeE,EAAAA,UAAf;AAA0BC,EAAAA,OAA1B;AAAkCC,EAAAA;AAAlC,CAAD,KAA8C;AAAA;;AAE7DP,EAAAA,SAAS,CAAC,MAAI;AACVG,IAAAA,aAAa;AAChB,GAFQ,EAEP,EAFO,CAAT;AAGA,MAAIK,WAAW,GAAG,EAAlB;;AACA,MAAG,CAACF,OAAD,IAAYD,UAAU,IAAI,EAA7B,EAAgC;AAC5BG,IAAAA,WAAW,GAAGH,UAAU,CAACI,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,EAAD,EAAIC,KAAJ,kBAC9B;AAAiB,MAAA,SAAS,EAAC,YAA3B;AAAA,8BACI;AAAA,kBAAKD,EAAE,CAACE;AAAR;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,EAAE,EAAC,WAAN;AAAA,kBAAmBF,EAAE,CAACG;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,EAAE,EAAC,UAAN;AAAA,mBAAkBH,EAAE,CAACI,YAArB,SAAsCJ,EAAE,CAACK,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,OAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA,YADU,CAAd;AAOH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,EAAE,EAAC,iBAA/B;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA,gBACKJ;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAxBD;;GAAMJ,U;;KAAAA,U;AAyBNA,UAAU,CAACa,SAAX,GAAuB;AACnBd,EAAAA,aAAa,EAACD,SAAS,CAACgB,IAAV,CAAeC,UADV;AAEnBd,EAAAA,UAAU,EAACH,SAAS,CAACkB,MAAV,CAAiBD;AAFT,CAAvB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BjB,EAAAA,UAAU,EAACiB,KAAK,CAACjB,UAAN,CAAiBA,UADE;AAE9BC,EAAAA,OAAO,EAACgB,KAAK,CAACjB,UAAN,CAAiBC,OAFK;AAG9BC,EAAAA,KAAK,EAACe,KAAK,CAACjB,UAAN,CAAiBE;AAHO,CAAL,CAA7B;;AAKA,eAAeN,OAAO,CAACoB,eAAD,EAAiB;AAAClB,EAAAA;AAAD,CAAjB,CAAP,CAAyCC,UAAzC,CAAf","sourcesContent":["import React,{useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {getExperience} from '../../actions/experience'\r\n\r\nconst Experience = ({getExperience,experience,loading,error}) => {\r\n\r\n    useEffect(()=>{\r\n        getExperience()\r\n    },[])\r\n    let experiences = \"\"\r\n    if(!loading && experience != {}){\r\n        experiences = experience.data.map((ex,index) =>(\r\n            <div key={index} className=\"experience\">\r\n                <h3>{ex.experience_title}</h3>\r\n                <p id=\"workplace\">{ex.experience_role}</p>\r\n                <p id=\"exp-date\">{ex.start_period} - {ex.end_period}</p>\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div className=\"cv-section\" id=\"experience-info\">\r\n            <h3>Experiences</h3>\r\n            <div id=\"exp-section\">\r\n                {experiences}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nExperience.propTypes = {\r\n    getExperience:PropTypes.func.isRequired,\r\n    experience:PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    experience:state.experience.experience,\r\n    loading:state.experience.loading,\r\n    error:state.experience.error\r\n})\r\nexport default connect(mapStateToProps,{getExperience})(Experience)\r\n"]},"metadata":{},"sourceType":"module"}