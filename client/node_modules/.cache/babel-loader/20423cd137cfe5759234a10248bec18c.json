{"ast":null,"code":"var _jsxFileName = \"D:\\\\PersonalProjects\\\\React_CV\\\\client\\\\src\\\\components\\\\CVInfo\\\\Project.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getProject } from '../../actions/project';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Project = ({\n  getProject,\n  project,\n  loading,\n  error\n}) => {\n  _s();\n\n  const [projBool, setProjBool] = useState(false);\n  useEffect(() => {\n    if (projBool === false) {\n      getProject();\n      setProjBool(true);\n    } else {\n      setTimeout(() => {\n        getProject();\n      }, 5000);\n    }\n\n    $(\"[id^=viewimg]\").on(\"click\", function () {\n      var parent = $(this).parent().parent();\n      var imgtoview = parent.children(\"#projimg\").attr(\"src\");\n      var previewer = $(\".img-previewer\");\n      previewer.css(\"display\", \"flex\");\n      $(\"#imgprev\").attr(\"src\", imgtoview);\n      $(\"#closePreviewer\").on(\"click\", function () {\n        previewer.css(\"display\", \"none\");\n      });\n    });\n  }, [project]);\n  let projects = \"\";\n  loading === false && project !== {} && (projects = project.data.map((proj, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `uploads/${proj.project_img}`,\n        id: \"projimg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-expand fa-lg zlatan\",\n          id: \"viewimg\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", proj.project_desc, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 40\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 22\n    }, this);\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cv-section\",\n    id: \"gallery-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Projects \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"gallery-section\",\n      children: [\" \", projects, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 30\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 14\n  }, this);\n};\n\n_s(Project, \"K9+G7S+KBuRtv6kxBpgBvI2TPAY=\");\n\n_c = Project;\nProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  loading: state.project.loading,\n  error: state.project.error\n});\n\nexport default connect(mapStateToProps, {\n  getProject\n})(Project);\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["D:/PersonalProjects/React_CV/client/src/components/CVInfo/Project.js"],"names":["React","useEffect","useState","connect","PropTypes","getProject","$","Project","project","loading","error","projBool","setProjBool","setTimeout","on","parent","imgtoview","children","attr","previewer","css","projects","data","map","proj","index","project_img","project_desc","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { getProject } from '../../actions/project'\r\nimport $ from 'jquery'\r\nconst Project = ({ getProject, project, loading, error }) => {\r\n    const [projBool, setProjBool] = useState(false)\r\n    useEffect(() => {\r\n        if (projBool === false) {\r\n            getProject()\r\n            setProjBool(true)\r\n        } else {\r\n            setTimeout(() => {\r\n                getProject()\r\n            }, 5000)\r\n        }\r\n\r\n\r\n        $(\"[id^=viewimg]\").on(\"click\", function() {\r\n            var parent = $(this).parent().parent()\r\n            var imgtoview = parent.children(\"#projimg\").attr(\"src\")\r\n            var previewer = $(\".img-previewer\")\r\n            previewer.css(\"display\", \"flex\")\r\n            $(\"#imgprev\").attr(\"src\", imgtoview)\r\n            $(\"#closePreviewer\").on(\"click\", function() {\r\n                previewer.css(\"display\", \"none\")\r\n            });\r\n        });\r\n    }, [project])\r\n\r\n\r\n\r\n    let projects = \"\"\r\n\r\n    loading === false && project !== {} && (\r\n        projects = project.data.map((proj, index) => {\r\n            return ( <\r\n                div key = { index }\r\n                className = \"image\" >\r\n                <\r\n                img src = { `uploads/${proj.project_img}` }\r\n                id = \"projimg\" / >\r\n                <\r\n                div className = \"image-info\" >\r\n                <\r\n                i className = \"fas fa-expand fa-lg zlatan\"\r\n                id = \"viewimg\" > < /i> <\r\n                p > { proj.project_desc } < /p> <\r\n                /div> <\r\n                /div>\r\n            )\r\n        })\r\n    )\r\n\r\n\r\n    return ( <\r\n        div className = \"cv-section\"\r\n        id = \"gallery-info\" >\r\n        <\r\n        h3 > Projects < /h3> <\r\n        div id = \"gallery-section\" > { projects } <\r\n        /div> <\r\n        /div>\r\n    )\r\n}\r\nProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project.project,\r\n    loading: state.project.loading,\r\n    error: state.project.error\r\n})\r\nexport default connect(mapStateToProps, { getProject })(Project)"]},"metadata":{},"sourceType":"module"}