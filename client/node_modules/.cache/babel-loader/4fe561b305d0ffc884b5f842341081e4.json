{"ast":null,"code":"var _jsxFileName = \"D:\\\\PersonalProjects\\\\React_CV\\\\client\\\\src\\\\components\\\\CVInfo\\\\Project.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getProject } from '../../actions/project';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Project = ({\n  getProject,\n  project,\n  loading,\n  error\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProject();\n    $(\"[id^=viewimg]\").on(\"click\", function () {\n      console.log(\"HELOOLLOLO\");\n      var parent = $(this).parent().parent();\n      var imgtoview = parent.children(\"#projimg\").attr(\"src\");\n      var previewer = $(\".img-previewer\");\n      previewer.css(\"display\", \"flex\");\n      $(\"#imgprev\").attr(\"src\", imgtoview);\n      $(\"#closePreviewer\").on(\"click\", function () {\n        previewer.css(\"display\", \"none\");\n      });\n    });\n  }, [project]);\n  let projects = \"\";\n  loading === false && project !== {} && (projects = project.data.map((proj, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `uploads/${proj.project_img}`,\n        id: \"projimg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-expand fa-lg zlatan\",\n          id: \"viewimg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: proj.project_desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this);\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cv-section\",\n    id: \"gallery-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"gallery-section\",\n      children: projects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Project, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Project;\nProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  loading: state.project.loading,\n  error: state.project.error\n});\n\nexport default connect(mapStateToProps, {\n  getProject\n})(Project);\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["D:/PersonalProjects/React_CV/client/src/components/CVInfo/Project.js"],"names":["React","useEffect","connect","PropTypes","getProject","$","Project","project","loading","error","on","console","log","parent","imgtoview","children","attr","previewer","css","projects","data","map","proj","index","project_img","project_desc","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {getProject} from '../../actions/project'\r\nimport $ from 'jquery'\r\nconst Project = ({getProject,project,loading,error}) => {\r\n    useEffect(()=>{\r\n        getProject()\r\n        $(\"[id^=viewimg]\").on(\"click\", function() {\r\n            console.log(\"HELOOLLOLO\")\r\n            var parent = $(this).parent().parent()\r\n            var imgtoview = parent.children(\"#projimg\").attr(\"src\")\r\n            var previewer = $(\".img-previewer\")\r\n            previewer.css(\"display\", \"flex\")\r\n            $(\"#imgprev\").attr(\"src\", imgtoview)\r\n            $(\"#closePreviewer\").on(\"click\", function() {\r\n                previewer.css(\"display\", \"none\")\r\n            });\r\n        });\r\n    },[project])\r\n\r\n    \r\n\r\n    let projects = \"\"\r\n\r\n    loading === false && project !=={} && (\r\n        projects = project.data.map((proj,index) => {\r\n            return(\r\n                <div key={index} className=\"image\">\r\n                    <img src={`uploads/${proj.project_img}`} id=\"projimg\"/>\r\n                    <div className=\"image-info\">\r\n                        <i className=\"fas fa-expand fa-lg zlatan\" id=\"viewimg\"></i>\r\n                        <p>{proj.project_desc}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        ) \r\n        \r\n\r\n    return (\r\n        <div className=\"cv-section\" id=\"gallery-info\">\r\n            <h3>Projects</h3>\r\n            <div id=\"gallery-section\">\r\n                {projects}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nProject.propTypes = {\r\n    getProject:PropTypes.func.isRequired,\r\n    project:PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project:state.project.project,\r\n    loading:state.project.loading,\r\n    error:state.project.error\r\n})\r\nexport default connect(mapStateToProps,{getProject})(Project)\r\n"]},"metadata":{},"sourceType":"module"}